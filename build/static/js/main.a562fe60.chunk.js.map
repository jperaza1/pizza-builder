{"version":3,"sources":["assets/PizzaBase.png","assets/pizza_logo.png","assets/Olive.png","assets/Pineapple.png","assets/Mushroom.png","assets/Basil.png","assets/Tomato.png","assets/BaseCheese.png","components/Header.js","components/Customize.js","components/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","style","padding","background","color","Customize","ingredients","setIngredients","useState","total","setTotal","useEffect","granTotal","map","item","value","price","history","useHistory","changeIngredients","e","nameIngredients","target","name","newValue","checked","newIngredients","label","localStorage","setItem","JSON","stringify","display","flex","maxHeight","maxWidth","position","index","div","initial","scale","opacity","animate","y","transition","duration","className","key","src","img","alt","height","width","Base","ingrediente","Number","parseFloat","toFixed","type","onChange","onClick","push","disabled","Checkout","success","setSuccess","fontFamily","marginLeft","textAlign","Pizzaman","fontSize","Math","round","random","App","Basil","Olive","Mushroom","Pineaple","Cheese","Tomato","data","getItem","parse","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a562fe60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PizzaBase.e87ca321.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza_logo.5086491e.png\";","module.exports = __webpack_public_path__ + \"static/media/Olive.a40a72f1.png\";","module.exports = __webpack_public_path__ + \"static/media/Pineapple.a2c5e05b.png\";","module.exports = __webpack_public_path__ + \"static/media/Mushroom.4d30186a.png\";","module.exports = __webpack_public_path__ + \"static/media/Basil.871c221e.png\";","module.exports = __webpack_public_path__ + \"static/media/Tomato.5cada894.png\";","module.exports = __webpack_public_path__ + \"static/media/BaseCheese.204b89ab.png\";","import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div style={{ padding: \"10px 50px\", background: \"black\" }}>\r\n      <div style={{ color: \"white\" }}>Pizza Builder</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Base from \"../assets/PizzaBase.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function Customize({ ingredients, setIngredients }) {\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let granTotal = 0;\r\n\r\n    ingredients.map((item) => {\r\n      if (item.value) {\r\n        granTotal = granTotal + item.price;\r\n      }\r\n    });\r\n\r\n    setTotal(granTotal);\r\n  }, [ingredients]);\r\n\r\n  let history = useHistory();\r\n\r\n  const changeIngredients = (e) => {\r\n    const nameIngredients = e.target.name;\r\n    const newValue = e.target.checked;\r\n\r\n    const newIngredients = ingredients.map((item) =>\r\n      item.label === nameIngredients ? { ...item, value: newValue } : item\r\n    );\r\n    setIngredients(newIngredients);\r\n    localStorage.setItem(\"ingredients\", JSON.stringify(newIngredients));\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div style={{ flex: 1, padding: 40 }}>\r\n        <div style={{ maxHeight: 500, maxWidth: 500, position: \"relative\" }}>\r\n          {ingredients.map((item, index) => {\r\n            return (\r\n              <motion.div\r\n                initial={item.label === \"Queso\" ? { scale: 0 } : { opacity: 0 }}\r\n                animate={\r\n                  item.label === \"Queso\"\r\n                    ? { scale: item.value ? 1 : 0 }\r\n                    : {\r\n                        y: item.value ? 100 : -100,\r\n                        opacity: item.value ? 1 : 0,\r\n                      }\r\n                }\r\n                transition={\r\n                  item.label === \"Queso\" ? { duration: 0.3 } : { duration: 1 }\r\n                }\r\n                className={\r\n                  item.label === \"Queso\"\r\n                    ? \"cheese z1\"\r\n                    : item.label === \"PiÃ±a\"\r\n                    ? \"ingredients z3\"\r\n                    : \"ingredients z4\"\r\n                }\r\n                key={index}\r\n              >\r\n                <img\r\n                  src={item.img}\r\n                  alt='Pizza Base'\r\n                  height='100%'\r\n                  width='100%'\r\n                />\r\n              </motion.div>\r\n            );\r\n          })}\r\n\r\n          <motion.div transition={{ duration: 1 }}>\r\n            <img src={Base} alt='Pizza Base' height='100%' width='100%' />\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n      <div style={{ flex: 1, padding: 40 }}>\r\n        <h1>Elija sus Ingredientes</h1>\r\n\r\n        {ingredients.map((ingrediente, index) => {\r\n          return (\r\n            <label className='container-checkbox' key={index}>\r\n              {ingrediente.label} $:{\" \"}\r\n              {Number.parseFloat(ingrediente.price).toFixed(2)}\r\n              <input\r\n                type='checkbox'\r\n                name={ingrediente.label}\r\n                checked={ingrediente.value}\r\n                onChange={changeIngredients}\r\n              />\r\n              <span className='checkmark'></span>\r\n            </label>\r\n          );\r\n        })}\r\n        <h1>Total: ${Number.parseFloat(total).toFixed(2)}</h1>\r\n        <button\r\n          onClick={() => history.push(\"/checkout\")}\r\n          className='proceedToCheckout'\r\n          disabled={total > 0 ? false : true}\r\n        >\r\n          Continuar con el pago\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Pizzaman from \"../assets/pizza_logo.png\";\r\n\r\nexport default function Checkout({ ingredients }) {\r\n  const history = useHistory();\r\n  const [success, setSuccess] = useState(false);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let granTotal = 0;\r\n\r\n    ingredients.map((item, index) => {\r\n      if (item.value) {\r\n        granTotal = granTotal + item.price;\r\n      }\r\n    });\r\n    setTotal(granTotal);\r\n  }, [ingredients]);\r\n\r\n  return (\r\n    <div style={{ padding: 50, display: \"flex\" }}>\r\n      <div style={{ flex: 1 }}>\r\n        <div>\r\n          <h1 style={{ fontFamily: \"Comfortaa\" }}>Mis Ingredientes</h1>\r\n          {total === 0 && <p>No ingredients Selected</p>}\r\n\r\n          {ingredients.map((item, index) => {\r\n            if (item.value) {\r\n              return <p key={index}>{item.label}</p>;\r\n            }\r\n          })}\r\n          <h1>Total: {Number.parseFloat(total).toFixed(2)}</h1>\r\n          <button\r\n            className='proceedToCheckout'\r\n            onClick={() => history.push(\"/\")}\r\n          >\r\n            Atras\r\n          </button>\r\n          <button\r\n            onClick={() => setSuccess(true)}\r\n            className='proceedToCheckout'\r\n            style={{ marginLeft: 10 }}\r\n            disabled={total > 0 ? false : true}\r\n          >\r\n            Confirmar\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div style={{ flex: 1 }}>\r\n        {success && (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <img src={Pizzaman} alt='pizzaman' height='300px' />\r\n            <div style={{ fontFamily: \"Open Sans Condensed\", fontSize: 35 }}>\r\n              Hemos recibido tu pedido, gracias\r\n            </div>\r\n            <div style={{ fontFamily: \"Comfortaa\" }}>\r\n              Orden #{Math.round(Math.random() * 100000)}\r\n            </div>\r\n            <div style={{ fontFamily: \"Indie Flower\", fontSize: 20 }}>\r\n              EstarÃ¡ lista en 20-30 min.\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Customize from \"./components/Customize\";\nimport Checkout from \"./components/Checkout\";\n\nimport Olive from \"./assets/Olive.png\";\nimport Pineaple from \"./assets/Pineapple.png\";\nimport Mushroom from \"./assets/Mushroom.png\";\nimport Basil from \"./assets/Basil.png\";\nimport Tomato from \"./assets/Tomato.png\";\nimport Cheese from \"./assets/BaseCheese.png\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [ingredients, setIngredients] = useState([\n    { value: false, label: \"Albahaca\", price: 0.5, img: Basil },\n    { value: false, label: \"Aceituna\", price: 0.5, img: Olive },\n    { value: false, label: \"ChampiÃ±ones\", price: 1.0, img: Mushroom },\n    { value: false, label: \"PiÃ±a\", price: 1.0, img: Pineaple },\n    { value: false, label: \"Queso\", price: 2.0, img: Cheese },\n    { value: false, label: \"Tomate\", price: 1.0, img: Tomato },\n  ]);\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"ingredients\");\n    if (data) {\n      setIngredients(JSON.parse(data));\n    }\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <Header />\n        <Router>\n          <Switch>\n            <Route exact path='/'>\n              <Customize\n                ingredients={ingredients}\n                setIngredients={setIngredients}\n              />\n            </Route>\n            <Route exact path='/checkout'>\n              <Checkout ingredients={ingredients} />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}